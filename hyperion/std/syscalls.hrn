package hyperion::std;

compiler_options(system, linux64) {
    macro syscall()                                                        { asm -> syscall;                               }
    macro syscall(a)                : extension( syscall () )              { asm -> mov rax, a;    extended();             }
    macro syscall(a,b)              : extension( syscall (a) )             { asm -> mov rdi, b;    extended(a);            }
    macro syscall(a,b,c)            : extension( syscall (a,b) )           { asm -> mov rsi, b;    extended(a,b);          }
    macro syscall(a,b,c,d)          : extension( syscall (a,b,c) )         { asm -> mov rdx, b;    extended(a,b,c);        }
    macro syscall(a,b,c,d,e)        : extension( syscall (a,b,c,d) )       { asm -> mov r10, b;    extended(a,b,c,d);      }
    macro syscall(a,b,c,d,e,f)      : extension( syscall (a,b,c,d,e) )     { asm -> mov r8,  b;    extended(a,b,c,d,e);    }
    macro syscall(a,b,c,d,e,f,g)    : extension( syscall (a,b,c,d,e,f) )   { asm -> mov r9,  b;    extended(a,b,c,d,e,f);  }
}

macro exit(code) {
    compiler_options(system, linux64) {
        syscall(60, 0);
    }
}